[
{
    "model": "questions.section",
    "pk": 1,
    "fields": {
        "name": "Python"
    }
},
{
    "model": "questions.section",
    "pk": 2,
    "fields": {
        "name": "SQL"
    }
},
{
    "model": "questions.section",
    "pk": 3,
    "fields": {
        "name": "Django"
    }
},
{
    "model": "questions.theme",
    "pk": 1,
    "fields": {
        "name": "Регулярные выражения",
        "section": 1
    }
},
{
    "model": "questions.theme",
    "pk": 2,
    "fields": {
        "name": "Функции",
        "section": 1
    }
},
{
    "model": "questions.theme",
    "pk": 3,
    "fields": {
        "name": "ООП",
        "section": 1
    }
},
{
    "model": "questions.theme",
    "pk": 4,
    "fields": {
        "name": "Отношения",
        "section": 2
    }
},
{
    "model": "questions.theme",
    "pk": 5,
    "fields": {
        "name": "Связи",
        "section": 2
    }
},
{
    "model": "questions.theme",
    "pk": 6,
    "fields": {
        "name": "Администрирование",
        "section": 3
    }
},
{
    "model": "questions.question",
    "pk": 1,
    "fields": {
        "theme": 1,
        "text": "Для чего нужны регулярные выражения?",
        "answer": "Регулярное выражение - это шаблон, сопоставляемый с искомой строкой слева направо. Термин «Регулярное выражение» сложно произносить каждый раз, поэтому, обычно, вы будете сталкиваться с сокращениями \"регэкспы\" или \"регулярки\". Регулярные выражения используются для замен текста внутри строк, валидации форм, извлечений подстрок по определенным шаблонам и множества других вещей."
    }
},
{
    "model": "questions.question",
    "pk": 2,
    "fields": {
        "theme": 4,
        "text": "Что такое отношения?",
        "answer": "Отноше́ние — фундаментальное понятие реляционной модели данных. По этой причине модель и называется реляционной (от англ. relation — «отношение»). Пусть дана совокупность типов данных Tназываемых также доменами, не обязательно различных."
    }
},
{
    "model": "questions.question",
    "pk": 3,
    "fields": {
        "theme": 6,
        "text": "Для чего нужна админка?",
        "answer": "Приложение Django admin может использовать ваши модели для автоматического создания части сайта, предназначенной для создания, просмотра, обновления и удаления записей. Это может сэкономить вам много времени в процессе разработки, упрощая тестирование ваших моделей на предмет правильности данных. Оно также может быть полезным для управления данными на стадии публикации, в зависимости от типа веб-сайта."
    }
},
{
    "model": "questions.question",
    "pk": 4,
    "fields": {
        "theme": 5,
        "text": "Какие типы связей существуют?",
        "answer": "О2О, М2О, М2М"
    }
},
{
    "model": "questions.question",
    "pk": 5,
    "fields": {
        "theme": 2,
        "text": "В чем отличия параметров функции от ее аргументов?",
        "answer": "При создании функции определяются ее параметры. При вызове – мы передаем аргументы. Данное соглашение о терминологии не является окончательным (среди разработчиков нет единой договоренности). Не будет большой ошибкой, если вы перепутаете термины. Тем не менее, лучше следовать официальным рекомендациям."
    }
},
{
    "model": "questions.question",
    "pk": 6,
    "fields": {
        "theme": 2,
        "text": "Что такое лямбда-фунции?",
        "answer": "Лямбда-функции в Python являются анонимными. Это означает, что функция безымянна. Как известно, ключевое слов def используется в Python для определения обычной функции. В свою очередь, ключевое слово  lambda  используется для определения анонимной функции."
    }
}
]
